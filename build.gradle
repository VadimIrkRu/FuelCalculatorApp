plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'  // Включаем Allure
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'io.qameta.allure:allure-junit5:2.18.1'  // Зависимость для Allure
    implementation 'io.qameta.allure:allure-java-commons:2.18.1'  // Зависимость для генерации отчетов Allure
    implementation 'io.qameta.allure:allure-commandline:2.18.1'  // Добавить зависимость для Allure CommandLine
}

test {
    useJUnitPlatform()
    finalizedBy 'allureReport'  // После тестов будет генерироваться отчет Allure
}

task allureReport(type: JavaExec) {
    main = 'io.qameta.allure.CommandLine'
    classpath = configurations.testRuntimeClasspath
    args 'generate', "$buildDir/allure-results", '--output', "$buildDir/allure-report"
}

task allureServe(type: JavaExec) {
    main = 'io.qameta.allure.CommandLine'
    classpath = configurations.testRuntimeClasspath
    args 'serve', "$buildDir/allure-report"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
